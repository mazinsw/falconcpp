[switch | simple switch-case]
switch(|)
{
    case :
        break;
}

[switchd | switch-case with default]
switch(|)
{
    case :
        break;
    default:
        break;
}

[while | simple while]
while(|)
    ;

[whileb | block while]
while(|)
{

}

[dowhile | do-while]
do
{

}while(|);

[class | simple classes]
class |
{

};

[classs | classes with scope]
class |
{
private:

protected:

public:

};

[for | simple for]
for(|; ; )
    ;

[forb | block for]
for(|; ; )
{

}

[fori | block for with variable i]
for(i = 0; i < |; i++)
{

}

[forj | block for with variable j]
for(j = 0; j < |; j++)
{

}

[forx | block for with variable x]
for(x = 0; x < |; x++)
{

}

[fory | block for with variable y]
for(y = 0; y < |; y++)
{

}

[if | simple if]
if(|)
    ;

[ifb | block if]
if(|)
{

}

[ife | if-else]
if(|)
    ;
else
    ;

[ifeb | block if-else]
if(|)
{

}
else
{

}

[try | try catch]
try
{
    |
}
catch(...)
{

}

[incs | include system file]
#include <|>

[incl | include local file]
#include "|"

[main | insert main funcion]
int main(int argc, char *argv[])
{
    |
    return 0;
}

[cmp | insert compare function]
int compare(const void *item1, const void *item2)
{
    if(*(int*)item1 > *(int*)item2)
        return 1;
    else if(*(int*)item1 < *(int*)item2)
        return -1;
    return 0;
}

[cfile | insert C file template]
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{
    |
    return 0;
}

[cppfile | insert C++ file template]
#include <iostream>

using namespace std;

int main(int argc, char *argv[])
{
    |
    return 0;
}

[struct | insert struct]
struct |
{

};

[tstruct | insert typedef struct]
typedef struct
{

} |;

[enum | insert enum]
enum |
{

};

[tenum | insert typedef enum]
typedef enum
{

} |;

[union | insert union]
union |
{

};

[tunion | insert typedef union]
typedef union
{

} |;